{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["usePersistentState","key","defaultValue","React","useState","JSON","parse","localStorage","getItem","value","setValue","useEffect","setItem","stringify","clearCanvas","ctx","clearRect","window","innerWidth","innerHeight","fillStyle","fillRect","sequence","uploadedImagePositioningMode","keepUploadedImage","App","loading","setLoading","useRef","usePersistentContext","history","setHistory","canvasRef","redoStack","setRedoStack","drawing","setDrawing","mouseMoved","setMouseMoved","debug","setDebug","imageDragged","setImageDragged","uploadedImage","setUploadedImage","x","y","start","setStart","end","setEnd","tool","setTool","previousTool","setPreviousTool","color","setColor","strokeWidth","setStrokeWidth","eraserWidth","setEraserWidth","mousePosition","setMousePosition","width","height","imageDimension","setImageDimension","colorPickerColor","setColorPickerColor","current","className","classList","add","document","body","remove","dropZoneRef","createRef","uploadButtonRef","setCtx","handleDropZoneDrag","e","dataTransfer","dropEffect","preventDefault","handleKeyUpDown","stopPropagation","type","addImage","file","match","img","Image","reader","FileReader","readAsDataURL","onload","dataset","base64","result","src","URL","createObjectURL","imageWidth","Math","min","redrawHistory","offset","historySize","length","changedHistory","changedRedoStack","slice","reverse","historyRedrawStartPosition","i","find","historyStep","found","a","redrawSingleHistoryStep","clearByOverdrawing","drawImageSrc","dx","dy","forEach","draw","lineWidth","forceTool","forceColor","forceLineWidth","save","lineJoin","lineCap","strokeStyle","beginPath","moveTo","rect","random","fill","lineTo","stroke","closePath","restore","getColorAtPosition","r","g","b","imageData","getImageData","data","toString","stopDrawing","clientX","clientY","push","drawPoint","globalCompositeOperation","drawImage","Promise","resolve","canvas","getContext","addEventListener","files","id","style","left","top","backgroundColor","ref","onClick","onWheel","deltaY","max","target","disabled","fileSource","fileName","link","createElement","setAttribute","display","appendChild","click","removeChild","download","toDataURL","onChange","hidden","checked","step","onMouseDown","button","onMouseMove","onMouseUp","includes","onMouseOut","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yPA2EA,SAASA,EAAmBC,EAAKC,GAAe,IAAD,EACnBC,IAAMC,SAC5BC,KAAKC,MAAMC,aAAaC,QAAQP,KAASC,GAFA,mBACtCO,EADsC,KAC/BC,EAD+B,KAS7C,OAJAP,IAAMQ,WAAU,WACdJ,aAAaK,QAAQX,EAAKI,KAAKQ,UAAUJ,MACxC,CAACR,EAAKQ,IAEF,CAACA,EAAOC,GAgBjB,SAASI,EAAYC,GAEnBA,EAAIC,UAAU,EAAG,EAAGC,OAAOC,WAAYD,OAAOE,aAI5CJ,EAAIK,UAAY,QAChBL,EAAIM,SAAS,EAAG,EAAGJ,OAAOC,WAAYD,OAAOE,aAQjD,IAAIG,EAAW,GACXC,GAA+B,EAG/BC,GAAoB,EAylBTC,MAvlBf,WAAgB,IAAD,EACiBtB,IAAMC,UAAS,GADhC,mBACNsB,EADM,KACGC,EADH,OAjCf,WAAiC,IAAD,EACA3B,EAAmB,UAAW,IAD9B,mBAI9B,MAAO,CAJuB,UAEZG,IAAMyB,OAAO,OAiCUC,GAF5B,mBAENC,EAFM,KAEGC,EAFH,KAEeC,EAFf,OAGqBhC,EAAmB,YAAa,IAHrD,mBAGNiC,EAHM,KAGKC,EAHL,OAIiB/B,IAAMC,UAAS,GAJhC,mBAIN+B,EAJM,KAIGC,EAJH,OAKuBjC,IAAMC,UAAS,GALtC,mBAKNiC,EALM,KAKMC,EALN,OAManC,IAAMC,UAAS,GAN5B,mBAMNmC,EANM,KAMCC,EAND,OAO2BrC,IAAMC,UAAS,GAP1C,mBAONqC,EAPM,KAOQC,EAPR,OAQ6BvC,IAAMC,SAAS,MAR5C,mBAQNuC,EARM,KAQSC,EART,OASazC,IAAMC,SAAS,CAAEyC,EAAG,EAAGC,EAAG,IATvC,mBASNC,EATM,KASCC,EATD,OAUS7C,IAAMC,SAAS,CAAEyC,EAAG,EAAGC,EAAG,IAVnC,mBAUNG,EAVM,KAUDC,EAVC,OAWWlD,EAAmB,OAxHvB,UA6GP,mBAWNmD,EAXM,KAWAC,GAXA,QAY2BpD,EAAmB,eAzHvC,UA6GP,qBAYNqD,GAZM,MAYQC,GAZR,SAaatD,EAAmB,QAxHnB,WA2Gb,qBAaNuD,GAbM,MAaCC,GAbD,SAcyBxD,EAAmB,cAvHhC,GAyGZ,qBAcNyD,GAdM,MAcOC,GAdP,SAeyB1D,EAAmB,cAtH/B,IAuGb,qBAeN2D,GAfM,MAeOC,GAfP,SAgB6BzD,IAAMC,SAAS,CAACyC,EAAG,EAAGC,EAAG,IAhBtD,qBAgBNe,GAhBM,MAgBSC,GAhBT,SAiB+B3D,IAAMC,SAAS,CAAC2D,MAAO,IAAKC,OAAQ,MAjBnE,qBAiBNC,GAjBM,MAiBUC,GAjBV,SAkBmC/D,IAAMC,SAASmD,IAlBlD,qBAkBNY,GAlBM,MAkBYC,GAlBZ,MAuBbjE,IAAMQ,WAAU,WACdqB,EAAUqC,QAAQC,UAAY,GAC9BtC,EAAUqC,QAAQE,UAAUC,IAAI,UAAYrB,KAC3C,CAACA,IAKJhD,IAAMQ,WAAU,WACVe,EACF+C,SAASC,KAAKH,UAAUC,IAAI,WAE5BC,SAASC,KAAKH,UAAUI,OAAO,aAEhC,CAACjD,IAEJ,IAAMkD,GAAczE,IAAM0E,YACpBC,GAAkB3E,IAAM0E,YAxCjB,GAyCS1E,IAAMC,WAzCf,qBAyCNW,GAzCM,MAyCDgE,GAzCC,MAgEb,SAASC,GAAmBC,GAC1BA,EAAEC,aAAaC,WAAa,OAC5BF,EAAEG,iBAGJ,SAASC,GAAgBJ,GACvB,GAAK1D,EAOL,OAHA0D,EAAEG,iBACFH,EAAEK,kBAEML,EAAEhF,KACR,IAAK,SACY,YAAXgF,EAAEM,OACJ3C,EAAiB,MACjBrB,GAA+B,GAEjC,MACF,IAzLiB,MA0LfC,EAA+B,YAAXyD,EAAEM,MAwD5B,SAASC,GAASC,GAEhB,GAAKA,EAAKF,KAAKG,MAAM,WAArB,CAIA,IAAMC,EAAM,IAAIC,MACVC,EAAS,IAAIC,WAGnBnE,GAAW,GAGXkE,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,WAEdL,EAAIM,QAAQC,OAASL,EAAOM,OAG5BR,EAAIS,IAAMC,IAAIC,gBAAgBb,GAG9BE,EAAIK,OAAS,WAEX,IAAMO,EAAaC,KAAKC,IAAIxC,GAAeF,MAAO4B,EAAI5B,OAEtDnB,EAAiB+C,GAEjBzB,GAAkB,CAChBH,MAAOwC,EACPvC,OAAQuC,EAAaZ,EAAI3B,OAAS2B,EAAI5B,QAIxCpC,GAAW,MAcjB,SAAS+E,GAAc3F,EAAK4F,GAE1B7F,EAAYC,GAIZ,IAAI6F,EAAc9E,EAAQ+E,OACtBC,EAAiB,KAGrB,GAAIH,EAAS,GAAK1E,EAAU4E,OAAQ,CAClCC,EAAc,sBAAOhF,GAAP,CAAgBG,EAAUA,EAAU4E,OAAS,KAC3D9E,EAAW+E,GACXF,IAEA,IAAMG,EAAmB9E,EAAU+E,MAAM,GAAI,GAC7C9E,EAAa6E,GAIf,GAAIJ,EAAS,GAAK7E,EAAQ+E,OAAQ,CAEhC,IAAME,EAAgB,sBAAO9E,GAAP,YAAsBH,EAAQkF,MAAML,GAASM,YACnE/E,EAAa6E,GAEbD,EAAiBhF,EAAQkF,MAAM,EAAGL,GAClC5E,EAAW+E,GACXF,GAAeD,EAIjB,GAAKC,EAAL,CAMA,IAAIM,EAA6B,EAC7BC,EAAI,EACR,YAAIrF,GAASmF,UAAUG,MAAK,SAAAC,GAC1B,IAAMC,EAA6B,UAArBD,EAAYlE,KAK1B,OAJImE,GAASH,EAAI,IACfD,EAA6BpF,EAAQ+E,OAASM,GAEhDA,IACOG,KAOT,uCAAC,4BAAAC,EAAA,sDACUJ,EAAID,EADd,YAC0CC,EAAIP,GAD9C,gCAESY,GAAwBzG,GAAM+F,GAAkBhF,GAASqF,IAFlE,OAC2DA,IAD3D,sBAICxF,GAAW,GAJZ,2CAAD,wDAjPW,SAgQE6F,GAhQF,mFAgQb,WAAuCzG,EAAKsG,GAA5C,SAAAE,EAAA,yDAE2B,UAArBF,EAAYlE,KAFlB,gBAGIsE,GAAmB1G,GAHvB,0BAMkC,UAArBsG,EAAYlE,KANzB,gCAOUuE,GAAa3G,EAAKsG,EAAYjB,IAAKiB,EAAYM,GAAIN,EAAYO,GAAIP,EAAYtD,MAAOsD,EAAYrD,QAP5G,8BAUaqD,EAAY/F,SAASuF,QAC9BQ,EAAY/F,SAASuG,SACjB,SAAAvG,GAAQ,OAAIwG,GAAKxG,EAAS,GAAIA,EAAS,GAAIP,EACvCsG,EAAYlE,KAAMkE,EAAY9D,MAC9B8D,EAAYU,cAdxB,6CAhQa,sBAkRb,SAASD,GAAK/E,EAAOE,EAAKlC,EAAKiH,EAAWC,EAAYC,GAqBpD,GApBAnH,EAAIoH,OAEJpH,EAAIqH,SAAW,QACfrH,EAAIsH,QAAU,QAEdtH,EAAIgH,UAAaG,GAAkBzE,GACnC1C,EAAIuH,YAAcL,GAAc1E,IACd,WAAdyE,GAAgD,qBAAdA,GAAsC,WAAT7E,KACjEpC,EAAIgH,UAAYpE,GAKd5C,EAAIuH,YA/Ya,WAmZrBvH,EAAIwH,YACJxH,EAAIyH,OAAOzF,EAAMF,EAAGE,EAAMD,GAER,UAAdkF,GAA+C,qBAAdA,GAAsC,UAAT7E,EAAmB,CACnF,IAAM4E,EAAYG,GAAkBzE,GAEpC1C,EAAIK,UAAYmC,GAehBxC,EAAI0H,KAAKxF,EAAIJ,EAAGI,EAAIH,EAAG,EAAG,GAE1B,IAAK,IAAIqE,EAAIY,EAAWZ,KACtBpG,EAAI0H,KACAxF,EAAIJ,EAAI2D,KAAKkC,SAAWX,EAAaA,EAAY,EACjD9E,EAAIH,EAAI0D,KAAKkC,SAAWX,EAAaA,EAAY,EACjD,EAAG,GAEPhH,EAAI4H,YAGN5H,EAAI6H,OAAO3F,EAAIJ,EAAGI,EAAIH,GACtB/B,EAAI8H,SAGN9H,EAAI+H,YACJ/H,EAAIgI,UA2CN,SAASC,GAAmBnG,EAAGC,GAC7B,IA/ccmG,EAAGC,EAAGC,EA+cdC,EAAYrI,GAAIsI,aAAaxG,EAAGC,EAAG,EAAG,GAAGwG,KAE/C,OAjdcL,EAidEG,EAAU,GAjdTF,EAidaE,EAAU,GAjdpBD,EAidwBC,EAAU,GAhdxDH,EAAIA,EAAEM,SAAS,IACfL,EAAIA,EAAEK,SAAS,IACfJ,EAAIA,EAAEI,SAAS,IAEE,IAAbN,EAAEpC,SACJoC,EAAI,IAAMA,GAEK,IAAbC,EAAErC,SACJqC,EAAI,IAAMA,GAEK,IAAbC,EAAEtC,SACJsC,EAAI,IAAMA,GAGL,IAAMF,EAAIC,EAAIC,EAodrB,SAASK,GAAYvE,IACH,IAAZ9C,IAAmC,IAAfE,IACtBW,EAAS,CAAEH,EAAGoC,EAAEwE,QAAS3G,EAAGmC,EAAEyE,UAC9BxG,EAAO,CAAEL,EAAGoC,EAAEwE,QAAS3G,EAAGmC,EAAEyE,UAhChC,SAAmB3G,EAAOE,EAAKlC,GAC7BmC,EAAO,CAACL,EAAGI,EAAIJ,EAAGC,IAAKG,EAAIH,IAE3BxB,EAASqI,KAAK,CAAC5G,EAAOE,IAEtB6E,GAAK/E,EAAOE,EAAKlC,GA6Bf6I,CAAU7G,EAAOE,EAAKlC,KAGpBO,EAASuF,SACX9E,EAAW,GAAD,mBAAKD,GAAL,CAAc,CACtBqB,KAAMA,EACN4E,UAAoB,WAAT5E,EAAoBQ,GAAcF,GAC7CF,MAAOA,GACPjC,SAAUA,MAEZY,EAAa,IACbZ,EAAW,IAGbc,GAAW,GACXE,GAAc,GAGhB,SAASmF,GAAmB1G,GAC1BA,EAAIoH,OACJpH,EAAIwH,YACJxH,EAAI8I,yBAA2B,kBAC/B9I,EAAIM,SAAS,EAAG,EAAGJ,OAAOC,WAAYD,OAAOE,aAC7CJ,EAAI8H,SACJ9H,EAAIgI,UA4BN,SAASe,GAAU/I,EAAK4E,EAAKgC,EAAIC,EAAI7D,EAAOC,GAC1CjD,EAAI+I,UAAUnE,EAAKgC,EAAIC,EAAI7D,EAAOC,GAGpC,SAAS0D,GAAa3G,EAAKqF,EAAKuB,EAAIC,EAAI7D,EAAOC,GAC7C,IAAM2B,EAAM,IAAIC,MAEhB,OADAD,EAAIS,IAAMA,EACH,IAAI2D,SAAQ,SAAAC,GACjBrE,EAAIK,OAAS,WACX8D,GAAU/I,EAAK4E,EAAKgC,EAAIC,EAAI7D,EAAOC,GACnCgG,QAkEN,OAneA7J,IAAMQ,WAAU,WACdY,EAAiD,OAAlBoB,IAC9B,CAACA,IAEJxC,IAAMQ,WAAU,WACd,IAAMsJ,EAASjI,EAAUqC,QACnBtD,EAAMkJ,EAAOC,WAAW,MAC9BnF,GAAOhE,GAEPkJ,EAAOlG,MAAQ9C,OAAOC,WACtB+I,EAAOjG,OAAS/C,OAAOE,YAEvBsD,SAAS0F,iBAAiB,aAAa,SAAClF,GACtCnB,GAAiB,CAAEjB,EAAGoC,EAAEwE,QAAS3G,EAAGmC,EAAEyE,aAqCxCzI,OAAOkJ,iBAAiB,UAAU,WAChCnI,EAAUqC,QAAQN,MAAQ9C,OAAOC,WACjCc,EAAUqC,QAAQL,OAAS/C,OAAOE,YAIlCuF,GAAc1E,EAAUqC,QAAQ6F,WAAW,UAG7CzF,SAAS0F,iBAAiB,UAAW9E,IACrCZ,SAAS0F,iBAAiB,QAAS9E,IAEnCpE,OAAOkJ,iBAAiB,YAAY,SAAClF,GACnCA,EAAEG,iBACFH,EAAEK,kBAEoB,OAAlB3C,GAIJD,GAAgB,MAGlBkC,GAAYP,QAAQ8F,iBAAiB,YAAanF,IAElDJ,GAAYP,QAAQ8F,iBAAiB,WAAYnF,IAEjDJ,GAAYP,QAAQ8F,iBAAiB,aAAa,SAAClF,GACjDvC,GAAgB,MAGlBkC,GAAYP,QAAQ8F,iBAAiB,QAAQ,SAAClF,GAC5CA,EAAEG,iBAEoB,OAAlBzC,IAIJD,GAAgB,GAEhB8C,GAASP,EAAEC,aAAakF,MAAM,QAxEhC1D,GAAc3F,KACb,CAACiB,IAidF,oCACE,yBAAKqI,GAAG,eAAeC,MAAO,CAAEC,KAAM1G,GAAchB,EAAG2H,IAAK3G,GAAcf,EAAI,IAAKwB,UAAW/B,EAAQ,GAAK,WAA3G,MAA0HsB,GAAchB,EAAxI,OAA+IgB,GAAcf,GAC7J,yBAAKuH,GAAG,qBAAqBC,MAAO,CAAEC,KAAM1G,GAAchB,EAAG2H,IAAK3G,GAAcf,EAAI,GAAI2H,gBAAiBtG,IACpGG,UAAoB,gBAATnB,EAAyB,GAAK,YAC9C,yBAAKuH,IAAK9F,GAAayF,GAAG,WAAW/F,UAAW7B,EAAe,GAAK,WAClE,gDAEF,yBAAK4H,GAAG,gBAAgBjE,IAAuB,OAAlBzD,EAAyBA,EAAcyD,IAAM,GACrE9B,UAA6B,OAAlB3B,EAAyB,SAAW,GAC/C2H,MAAO,CACLC,KAAwB,OAAlB5H,EAAyB,EAAKkB,GAAchB,EAAKoB,GAAeF,MAAQ,EAC9EyG,IAAuB,OAAlB7H,EAAyB,EAAKkB,GAAcf,EAAKmB,GAAeD,OAAS,GAEhFD,MAAOE,GAAeF,MACtBC,OAAQC,GAAeD,OACvB2G,QA7ET,SAA0B1F,GACF,OAAlBtC,IACFmH,GACI/I,GACA4B,EACAkB,GAAchB,EAAKoB,GAAeF,MAAQ,EAC1CF,GAAcf,EAAKmB,GAAeD,OAAS,EAC3CC,GAAeF,MACfE,GAAeD,QAGnBjC,EAAW,GAAD,mBAAKD,GAAL,CAAc,CACtBqB,KAAM,QACNiD,IAAKzD,EAAcsD,QAAQC,OAC3ByB,GAAI9D,GAAchB,EAAKoB,GAAeF,MAAQ,EAC9C6D,GAAI/D,GAAcf,EAAKmB,GAAeD,OAAS,EAC/CD,MAAOE,GAAeF,MACtBC,OAAQC,GAAeD,WAEzB9B,EAAa,IAERV,GACHoB,EAAiB,QAwDdgI,QApCT,SAAyB3F,GACvB,IAAM4F,GAAqB,GAAZ5F,EAAE4F,OAEbtE,EAAatC,GAAeF,MAAQ8G,EAGxCtE,EAAaC,KAAKsE,IAAI,GAAIvE,GAE1BrC,GAAkB,CAChBH,MAAOwC,EACPvC,OAAQuC,EAAatB,EAAE8F,OAAO/G,OAASiB,EAAE8F,OAAOhH,WA4BhD,yBAAKO,UAAU,YACb,4BAAQqG,QAAS,kBAAMnI,GAAUD,KAAjC,SACA,4BAAQoI,QAnDd,WAEE7J,EAAYC,IAGZgB,EAAW,IAGXG,EAAa,KA2CmB8I,UAAWlJ,EAAQ+E,SAAW5E,EAAU4E,QAApE,OACA,4BAAQ8D,QA3Hd,WACElD,GAAmB1G,IAEnBgB,EAAW,GAAD,mBAAKD,GAAL,CAAc,CACtBqB,KAAM,YAERjB,EAAa,KAqHqB8I,UAAWlJ,EAAQ+E,QAA+C,UAArC/E,EAAQA,EAAQ+E,OAAS,GAAG1D,MAAvF,SACA,4BAAQwH,QAnHd,WACEhJ,GAAW,GACX+E,GAAc3F,IAAM,IAiHaiK,UAAWlJ,EAAQ+E,QAAhD,QACA,4BAAQ8D,QA/Gd,WACEhJ,GAAW,GACX+E,GAAc3F,GAAK,IA6GciK,UAAW/I,EAAU4E,QAAlD,QACA,4BAAQ8D,QA3Gd,YA9fF,SAAkBM,GAAqC,IAAzBC,EAAwB,uDAAb,YACjCC,EAAO1G,SAAS2G,cAAc,KAEpCD,EAAKE,aAAa,OAAQJ,GAC1BE,EAAKE,aAAa,WAAYH,GAE9BC,EAAKb,MAAMgB,QAAU,OAErB7G,SAASC,KAAK6G,YAAYJ,GAC1BA,EAAKK,QACL/G,SAASC,KAAK+G,YAAYN,GAufxBO,CAFe1J,EAAUqC,QAETsH,eAwGZ,cACA,4BAAQhB,QA5Dd,WACE7F,GAAgBT,QAAQmH,UA2DpB,aACA,8BACE,2BAAOd,IAAK5F,GAAiBuF,GAAG,eAAe9E,KAAK,OAAOqG,SAjanE,SAA0B3G,GACxBO,GAASP,EAAE8F,OAAOX,MAAM,KAgaqEyB,QAAM,IAC7F,+BACE,2BAAOtG,KAAK,QAAQ9E,MAAM,SAASqL,QAAkB,WAAT3I,EAAmByI,SAAU,SAAA3G,GAAC,OAAI7B,GAAQ6B,EAAE8F,OAAOtK,UADjG,SAIA,+BACE,2BAAO8E,KAAK,QAAQ9E,MAAM,QAAQqL,QAAkB,UAAT3I,EAAkByI,SAAU,SAAA3G,GAAC,OAAI7B,GAAQ6B,EAAE8F,OAAOtK,UAD/F,gBAIA,+BACE,2BAAO8E,KAAK,QAAQ9E,MAAM,SAASqL,QAAkB,WAAT3I,EAAmByI,SAAU,SAAA3G,GAAC,OAAI7B,GAAQ6B,EAAE8F,OAAOtK,UADjG,YAIA,+BACE,2BAAO8E,KAAK,QAAQ9E,MAAM,cAAcqL,QAAkB,gBAAT3I,EAAwByI,SA/CnF,SAAoC3G,GAClC3B,GAAgBH,GAChBC,GAAQ6B,EAAE8F,OAAOtK,UA4CX,iBAIA,2BAAOoL,OAAiB,WAAT1I,GACb,2BAAOoC,KAAK,QAAQ9E,MAAO8C,GAAOqI,SAAU,SAAA3G,GAAC,OAAIzB,GAASyB,EAAE8F,OAAOtK,QAC5DuK,SAAmB,WAAT7H,GAA8B,UAATA,IAFxC,SAKA,2BAAO0I,OAAiB,WAAT1I,GAA8B,UAATA,GAClC,2BAAOoC,KAAK,QAAQ9E,MAAOgD,GAAamI,SAAU,SAAA3G,GAAC,OAAIvB,GAAeuB,EAAE8F,OAAOtK,QACxEgG,IAAI,IAAIqE,IAAI,MAAMiB,KAAK,MAFhC,eAKA,2BAAOF,OAAiB,WAAT1I,GACb,2BAAOoC,KAAK,QAAQ9E,MAAOkD,GAAaiI,SAAU,SAAA3G,GAAC,OAAIrB,GAAeqB,EAAE8F,OAAOtK,QACxEgG,IAAI,IAAIqE,IAAI,MAAMiB,KAAK,MAFhC,iBAOJ,4BACErB,IAAK1I,EACLgK,YAlQN,SAA+B/G,GAEZ,IAAbA,EAAEgH,QAAyB,gBAAT9I,IAItBf,GAAW,GAEXY,EAAS,CAAEH,EAAGoC,EAAEwE,QAAS3G,EAAGmC,EAAEyE,UAC9BxG,EAAO,CAAEL,EAAGoC,EAAEwE,QAAS3G,EAAGmC,EAAEyE,YA0PxBwC,YAvPN,SAA+BjH,GAChB,gBAAT9B,GACFiB,GAAoB4E,GAAmB/D,EAAEwE,QAASxE,EAAEyE,WAGtC,IAAZvH,IAIJG,GAAc,GAGdU,EAAS,CAAEH,EAAGI,EAAIJ,EAAGC,EAAGG,EAAIH,IAC5BI,EAAO,CAAEL,EAAGoC,EAAEwE,QAAS3G,EAAGmC,EAAEyE,UAE5BpI,EAASqI,KAAK,CAAC5G,EAAOE,IAEtB6E,GAAK/E,EAAOE,EAAKlC,MAuOboL,UAlNN,SAA6BlH,GAC3B,GAAa,gBAAT9B,EAIF,OAHAK,GAASwF,GAAmB/D,EAAEwE,QAASxE,EAAEyE,eACzCtG,GAAQ,CAAC,SAAU,SAASgJ,SAAS/I,IAAgBA,GAAe,UAKtEmG,GAAYvE,IA2MRoH,WAvNN,SAA8BpH,GAC5BuE,GAAYvE,QCxeIqH,QACW,cAA7BrL,OAAOsL,SAASC,UAEe,UAA7BvL,OAAOsL,SAASC,UAEhBvL,OAAOsL,SAASC,SAAS9G,MACvB,2DCZN+G,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlI,SAASmI,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.36df2801.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\n/**\n * Settings\n */\n// use transparent background for canvas\nconst TRANSPARENT_BACKGROUND = false;\n// color to use for canvas background, applies only if TRANSPARENT_BACKGROUND=false\nconst BACKGROUND_COLOR = '#ffffff'; // white\n// preselected brush tool; available values: pencil, spray, eraser, colorpicker\nconst DEFAULT_BRUSH = 'pencil';\n// preselected color for brush tools\nconst DEFAULT_BRUSH_COLOR = '#000000'; // black\n// preselected brush strength\nconst DEFAULT_BRUSH_SIZE = 5;\n// preselected brush strength\nconst DEFAULT_ERASER_SIZE = 10;\n// key to press to activate \"stamp-mode\" when placing added images\nconst KEY_STAMP_MODE = 'Alt';\n\n\n/**\n * Helper to convert rgb to hex color\n * \n * @param {number} r Red\n * @param {number} g Green\n * @param {number} b Blue\n * @returns {string} Hex color code \n */\nfunction rgbToHex(r, g, b) {\n  r = r.toString(16);\n  g = g.toString(16);\n  b = b.toString(16);\n\n  if (r.length === 1) {\n    r = '0' + r;\n  }\n  if (g.length === 1) {\n    g = '0' + g;\n  }\n  if (b.length === 1) {\n    b = '0' + b;\n  }\n\n  return '#' + r + g + b;\n}\n\n/**\n * Download given source file\n *\n * @param {string} fileSource\n * @param {string} fileName\n */\nfunction download(fileSource, fileName = 'image.png') {\n  const link = document.createElement('a');\n\n  link.setAttribute('href', fileSource);\n  link.setAttribute('download', fileName);\n\n  link.style.display = 'none';\n\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\n/**\n * Custom state hook using localStorage as data store\n *\n * @param {string} key Unique(!) key\n * @param {*} defaultValue Default value, if no value set already\n * @returns {*[]}\n */\nfunction usePersistentState(key, defaultValue) {\n  const [value, setValue] = React.useState(\n      JSON.parse(localStorage.getItem(key)) || defaultValue\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value]);\n\n  return [value, setValue];\n}\n\n// FIXME\nfunction usePersistentContext() {\n  const [history, setHistory] = usePersistentState('history', []);\n  const canvasRef = React.useRef(null);\n\n  return [history, setHistory, canvasRef];\n}\n\n/**\n * Clears canvas and adds colored background if configured\n *\n * @param {CanvasRenderingContext2D} ctx\n */\nfunction clearCanvas(ctx) {\n  // clear everything on canvas\n  ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n\n  // fill canvas with white color if configured\n  if (!TRANSPARENT_BACKGROUND) {\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n  }\n}\n\n/**\n * Global state variables for which react states were too unreliable\n * @type {*[]}\n */\nlet sequence = [];\nlet uploadedImagePositioningMode = false;\n\n// a.k.a stamp-mode: keep uploaded image for adding it multiple times on canvas\nlet keepUploadedImage = false;\n\nfunction App() {\n  const [loading, setLoading] = React.useState(false);\n  const [history, setHistory, canvasRef] = usePersistentContext();\n  const [redoStack, setRedoStack] = usePersistentState('redoStack', []);\n  const [drawing, setDrawing] = React.useState(false);\n  const [mouseMoved, setMouseMoved] = React.useState(false);\n  const [debug, setDebug] = React.useState(false);\n  const [imageDragged, setImageDragged] = React.useState(false);\n  const [uploadedImage, setUploadedImage] = React.useState(null);\n  const [start, setStart] = React.useState({ x: 0, y: 0});\n  const [end, setEnd] = React.useState({ x: 0, y: 0});\n  const [tool, setTool] = usePersistentState('tool', DEFAULT_BRUSH);\n  const [previousTool, setPreviousTool] = usePersistentState('previousTool', DEFAULT_BRUSH);\n  const [color, setColor] = usePersistentState('color', DEFAULT_BRUSH_COLOR);\n  const [strokeWidth, setStrokeWidth] = usePersistentState('strokeWidth', DEFAULT_BRUSH_SIZE);\n  const [eraserWidth, setEraserWidth] = usePersistentState('eraserWidth', DEFAULT_ERASER_SIZE);\n  const [mousePosition, setMousePosition] = React.useState({x: 0, y: 0});\n  const [imageDimension, setImageDimension] = React.useState({width: 300, height: 300});\n  const [colorPickerColor, setColorPickerColor] = React.useState(color);\n\n  /**\n   * Set cursor-class depending on selected tool\n   */\n  React.useEffect(() => {\n    canvasRef.current.className = \"\";\n    canvasRef.current.classList.add('cursor-' + tool);\n  }, [tool])\n\n  /**\n   * Set loading-class depending on loading state\n   */\n  React.useEffect(() => {\n    if (loading) {\n      document.body.classList.add('loading');\n    } else {\n      document.body.classList.remove('loading');\n    }\n  }, [loading]);\n\n  const dropZoneRef = React.createRef();\n  const uploadButtonRef = React.createRef();\n  const [ctx, setCtx] = React.useState();\n\n  React.useEffect(() => {\n    uploadedImagePositioningMode = uploadedImage !== null;\n  }, [uploadedImage]);\n\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    setCtx(ctx);\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    document.addEventListener('mousemove', (e) => {\n      setMousePosition({ x: e.clientX, y: e.clientY });\n    });\n\n    addEventListeners();\n\n    redrawHistory(ctx);\n  }, [canvasRef]);\n\n  function handleDropZoneDrag(e) {\n    e.dataTransfer.dropEffect = 'copy';\n    e.preventDefault();\n  }\n\n  function handleKeyUpDown(e) {\n    if (!uploadedImagePositioningMode) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    switch (e.key) {\n      case 'Escape':\n        if (e.type === 'keydown') {\n          setUploadedImage(null);\n          uploadedImagePositioningMode = false;\n        }\n        break;\n      case KEY_STAMP_MODE:\n        keepUploadedImage = e.type === 'keydown';\n        break;\n      default:\n        // nothing\n    }\n  }\n\n  function addEventListeners() {\n    window.addEventListener('resize', () => {\n      canvasRef.current.width = window.innerWidth;\n      canvasRef.current.height = window.innerHeight;\n\n      // redraw everything as canvas gets cleared as soon as its\n      // width or height changes, see: https://stackoverflow.com/a/5517885\n      redrawHistory(canvasRef.current.getContext('2d'));\n    });\n\n    document.addEventListener('keydown', handleKeyUpDown);\n    document.addEventListener('keyup', handleKeyUpDown);\n\n    window.addEventListener('dragover', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (uploadedImage !== null) {\n        return;\n      }\n\n      setImageDragged(true);\n    });\n\n    dropZoneRef.current.addEventListener('dragenter', handleDropZoneDrag);\n\n    dropZoneRef.current.addEventListener('dragover', handleDropZoneDrag);\n\n    dropZoneRef.current.addEventListener('dragleave', (e) => {\n      setImageDragged(false);\n    });\n\n    dropZoneRef.current.addEventListener('drop', (e) => {\n      e.preventDefault();\n\n      if (uploadedImage !== null) {\n        return;\n      }\n\n      setImageDragged(false);\n\n      addImage(e.dataTransfer.files[0]);\n    });\n  }\n\n  function handleFileUpload(e) {\n    addImage(e.target.files[0]);\n  }\n\n  function addImage(file) {\n    // stop processing if file is not an image\n    if (!file.type.match(/image.*/)) {\n      return;\n    }\n\n    const img = new Image();\n    const reader = new FileReader();\n\n    // give visual feedback that image is loading\n    setLoading(true);\n\n    // use FileReader to get base64 file representation\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      // save base64 representation for using it in history later\n      img.dataset.base64 = reader.result;\n\n      // use object url to display the image\n      img.src = URL.createObjectURL(file);\n\n      // wait till image is loaded\n      img.onload = () => {\n        // scale image to appropriate width, but prevent up-scaling\n        const imageWidth = Math.min(imageDimension.width, img.width);\n\n        setUploadedImage(img);\n\n        setImageDimension({\n          width: imageWidth,\n          height: imageWidth * img.height / img.width\n        });\n\n        // finished loading (in theory..)\n        setLoading(false);\n      };\n    };\n  }\n\n  /**\n   * Redraws the canvas based on the saved history.\n   *\n   * If offset is set, it will undo (negative number) or rather redo (positive\n   * number) the history by the given number.\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {number} offset Negative offset results in undo, positive in redo.\n   */\n  function redrawHistory(ctx, offset) {\n    // clear canvas at first\n    clearCanvas(ctx);\n\n    // history.length does not get updated here fast enough,\n    // because setHistory is async; that's why we introduce local helpers vars.\n    let historySize = history.length;\n    let changedHistory = null;\n\n    // Redo part - go forward in history by <offset> steps\n    if (offset > 0 && redoStack.length) {\n      changedHistory = [...history, redoStack[redoStack.length - 1]];\n      setHistory(changedHistory);\n      historySize++;\n      \n      const changedRedoStack = redoStack.slice(0, -1);\n      setRedoStack(changedRedoStack);\n    }\n\n    // Undo part - go back in history by <offset> steps\n    if (offset < 0 && history.length) {\n      // put last <offset> steps from history to redoStack\n      const changedRedoStack = [...redoStack, ...(history.slice(offset)).reverse()];\n      setRedoStack(changedRedoStack);\n      \n      changedHistory = history.slice(0, offset);\n      setHistory(changedHistory);\n      historySize += offset;\n    }\n\n    // History is empty, nothing to draw, canvas stays clear\n    if (!historySize) {\n      return;\n    }\n\n    // Optimization: Only redraw everything beginning after the last clear-step.\n    // This avoids flickering, especially when having images in the history.\n    let historyRedrawStartPosition = 0;\n    let i = 0;\n    [...history].reverse().find(historyStep => {\n      const found = historyStep.tool === 'clear';\n      if (found && i > 0) {\n        historyRedrawStartPosition = history.length - i;\n      }\n      i++;\n      return found;\n    });\n\n    // (Re-)Drawing images is an async job, that's why we must make sure\n    // the history processing stays chronological.\n    // Fancy async/await/anonymous function loop code found here:\n    // https://stackoverflow.com/a/40329190\n    (async function loop() {\n      for (let i = historyRedrawStartPosition; i < historySize; i++) {\n        await redrawSingleHistoryStep(ctx, (changedHistory || history)[i]);\n      }\n      setLoading(false);\n    })();\n  }\n\n  /**\n   * Redraw single history step\n   *\n   * @param ctx\n   * @param historyStep\n   * @returns {Promise<void>}\n   */\n  async function redrawSingleHistoryStep(ctx, historyStep) {\n    // Clear canvas\n    if (historyStep.tool === 'clear') {\n      clearByOverdrawing(ctx);\n\n    // Draw image (async)\n    } else if (historyStep.tool === 'image') {\n      await drawImageSrc(ctx, historyStep.src, historyStep.dx, historyStep.dy, historyStep.width, historyStep.height);\n\n    // Draw sequences for defined tool (pencil, spray, eraser, etc.)\n    } else if (historyStep.sequence.length) {\n      historyStep.sequence.forEach(\n          sequence => draw(sequence[0], sequence[1], ctx,\n              historyStep.tool, historyStep.color,\n              historyStep.lineWidth));\n    }\n  }\n\n  function draw(start, end, ctx, forceTool, forceColor, forceLineWidth) {\n    ctx.save();\n\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n\n    ctx.lineWidth =  forceLineWidth || strokeWidth;\n    ctx.strokeStyle = forceColor || color;\n    if (forceTool === 'eraser' || (typeof forceTool === 'undefined' && tool === 'eraser')) {\n      ctx.lineWidth = eraserWidth;\n\n      if (TRANSPARENT_BACKGROUND) {\n        ctx.globalCompositeOperation = 'destination-out';\n      } else {\n        ctx.strokeStyle = BACKGROUND_COLOR;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(start.x, start.y);\n\n    if (forceTool === 'spray' || (typeof forceTool === 'undefined' && tool === 'spray')) {\n      const lineWidth = forceLineWidth || strokeWidth;\n\n      ctx.fillStyle = color;\n\n      // for (let i = lineWidth; i--;) {\n      //   ctx.arc(\n      //       end.x + Math.cos(Math.random() * Math.PI * 2) * lineWidth *\n      //       Math.random(),\n      //       end.y + Math.sin(Math.random() * Math.PI * 2) * lineWidth *\n      //       Math.random(),\n      //       1,\n      //       0, Math.PI * 2, false\n      //   );\n      //\n      //   ctx.fill();\n      // }\n\n      ctx.rect(end.x, end.y, 1, 1);\n\n      for (let i = lineWidth; i--;) {\n        ctx.rect(\n            end.x + Math.random() * lineWidth - (lineWidth / 2),\n            end.y + Math.random() * lineWidth - (lineWidth / 2),\n            1, 1\n        );\n        ctx.fill();\n      }\n    } else {\n      ctx.lineTo(end.x, end.y);\n      ctx.stroke();\n    }\n\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  function handleCanvasMouseDown(e) {\n    // only main mouse button (usually left mouse button)\n    if (e.button !== 0 || tool === 'colorpicker') {\n      return;\n    }\n\n    setDrawing(true);\n\n    setStart({ x: e.clientX, y: e.clientY });\n    setEnd({ x: e.clientX, y: e.clientY });\n  }\n\n  function handleCanvasMouseMove(e) {\n    if (tool === 'colorpicker') {\n      setColorPickerColor(getColorAtPosition(e.clientX, e.clientY));\n    }\n\n    if (drawing !== true) {\n      return;\n    }\n\n    setMouseMoved(true);\n\n    // draw line\n    setStart({ x: end.x, y: end.y });\n    setEnd({ x: e.clientX, y: e.clientY });\n\n    sequence.push([start, end]);\n\n    draw(start, end, ctx);\n  }\n\n  function drawPoint(start, end, ctx) {\n    setEnd({x: end.x, y: ++end.y });\n\n    sequence.push([start, end]);\n\n    draw(start, end, ctx);\n  }\n\n  function getColorAtPosition(x, y) {\n    const imageData = ctx.getImageData(x, y, 1, 1).data;\n\n    return rgbToHex(imageData[0], imageData[1], imageData[2]);\n  }\n\n  function handleCanvasMouseOut(e) {\n    stopDrawing(e);\n  }\n\n  function handleCanvasMouseUp(e) {\n    if (tool === 'colorpicker') {\n      setColor(getColorAtPosition(e.clientX, e.clientY));\n      setTool(['pencil', 'spray'].includes(previousTool) ? previousTool : 'pencil');\n\n      return;\n    }\n\n    stopDrawing(e);\n  }\n\n  function stopDrawing(e) {\n    if (drawing === true && mouseMoved === false) {\n      setStart({ x: e.clientX, y: e.clientY });\n      setEnd({ x: e.clientX, y: e.clientY });\n\n      drawPoint(start, end, ctx);\n    }\n\n    if (sequence.length) {\n      setHistory([...history, {\n        tool: tool,\n        lineWidth: tool === 'eraser' ? eraserWidth : strokeWidth,\n        color: color,\n        sequence: sequence\n      }]);\n      setRedoStack([]);\n      sequence = [];\n    }\n\n    setDrawing(false);\n    setMouseMoved(false);\n  }\n\n  function clearByOverdrawing(ctx) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function handleClear() {\n    clearByOverdrawing(ctx);\n\n    setHistory([...history, {\n      tool: 'clear'\n    }]);\n    setRedoStack([]);\n  }\n\n  function handleUndo() {\n    setLoading(true);\n    redrawHistory(ctx, -1);\n  }\n\n  function handleRedo() {\n    setLoading(true);\n    redrawHistory(ctx, +1);\n  }\n\n  function handleExport() {\n    const canvas = canvasRef.current;\n\n    download(canvas.toDataURL());\n  }\n\n  function drawImage(ctx, img, dx, dy, width, height) {\n    ctx.drawImage(img, dx, dy, width, height);\n  }\n\n  function drawImageSrc(ctx, src, dx, dy, width, height) {\n    const img = new Image();\n    img.src = src;\n    return new Promise(resolve => {\n      img.onload = () => {\n        drawImage(ctx, img, dx, dy, width, height);\n        resolve();\n      }\n    });\n  }\n\n  function handleImageClick(e) {\n    if (uploadedImage !== null) {\n      drawImage(\n          ctx,\n          uploadedImage,\n          mousePosition.x - (imageDimension.width / 2),\n          mousePosition.y - (imageDimension.height / 2),\n          imageDimension.width,\n          imageDimension.height\n      );\n\n      setHistory([...history, {\n        tool: 'image',\n        src: uploadedImage.dataset.base64,\n        dx: mousePosition.x - (imageDimension.width / 2),\n        dy: mousePosition.y - (imageDimension.height / 2),\n        width: imageDimension.width,\n        height: imageDimension.height\n      }]);\n      setRedoStack([]);\n\n      if (!keepUploadedImage) {\n        setUploadedImage(null);\n      }\n    }\n  }\n\n  function handleAddImage() {\n    uploadButtonRef.current.click();\n  }\n\n  function handleNew() {\n    // clear canvas completely\n    clearCanvas(ctx);\n\n    // remove history content\n    setHistory([]);\n\n    // remove redo stack content\n    setRedoStack([]);\n  }\n\n  function handleImageZoom(e) {\n    const deltaY = e.deltaY * -0.5;\n\n    let imageWidth = imageDimension.width + deltaY;\n\n    // restrict min width of image\n    imageWidth = Math.max(50, imageWidth);\n\n    setImageDimension({\n      width: imageWidth,\n      height: imageWidth * e.target.height / e.target.width\n    });\n  }\n\n  function handleColorPickerSelection(e) {\n    setPreviousTool(tool);\n    setTool(e.target.value);\n  }\n\n  return (\n    <>\n      <div id=\"debugTooltip\" style={{ left: mousePosition.x, top: mousePosition.y + 20}} className={debug ? '' : 'hidden '}>x: {mousePosition.x} y: {mousePosition.y}</div>\n      <div id=\"colorPickerTooltip\" style={{ left: mousePosition.x, top: mousePosition.y + 20, backgroundColor: colorPickerColor }}\n           className={tool === 'colorpicker' ? '' : 'hidden '} />\n      <div ref={dropZoneRef} id=\"dropZone\" className={imageDragged ? '' : 'hidden '}>\n        <p>Bild einfügen</p>\n      </div>\n      <img id=\"uploadedImage\" src={uploadedImage !== null ? uploadedImage.src : ''}\n           className={uploadedImage === null ? 'hidden' : ''}\n           style={{\n             left: uploadedImage === null ? 0 : (mousePosition.x - (imageDimension.width / 2)),\n             top: uploadedImage === null ? 0 : (mousePosition.y - (imageDimension.height / 2))\n           }}\n           width={imageDimension.width}\n           height={imageDimension.height}\n           onClick={handleImageClick}\n           onWheel={handleImageZoom}\n      />\n      <div className=\"controls\">\n        <button onClick={() => setDebug(!debug)}>Debug</button>\n        <button onClick={handleNew} disabled={!history.length && !redoStack.length}>New</button>\n        <button onClick={handleClear} disabled={!history.length || history[history.length - 1].tool === 'clear'}>Clear</button>\n        <button onClick={handleUndo} disabled={!history.length}>Undo</button>\n        <button onClick={handleRedo} disabled={!redoStack.length}>Redo</button>\n        <button onClick={handleExport}>Export PNG</button>\n        <button onClick={handleAddImage}>Add Image</button>\n        <form>\n          <input ref={uploadButtonRef} id=\"uploadButton\" type=\"file\" onChange={handleFileUpload} hidden />\n          <label>\n            <input type=\"radio\" value=\"pencil\" checked={tool === 'pencil'} onChange={e => setTool(e.target.value)} />\n            Stift\n          </label>\n          <label>\n            <input type=\"radio\" value=\"spray\" checked={tool === 'spray'} onChange={e => setTool(e.target.value)} />\n            Sprühdose\n          </label>\n          <label>\n            <input type=\"radio\" value=\"eraser\" checked={tool === 'eraser'} onChange={e => setTool(e.target.value)} />\n            Radierer\n          </label>\n          <label>\n            <input type=\"radio\" value=\"colorpicker\" checked={tool === 'colorpicker'} onChange={handleColorPickerSelection} />\n            Farbwähler\n          </label>\n          <label hidden={tool === 'eraser'}>\n            <input type=\"color\" value={color} onChange={e => setColor(e.target.value)}\n                   disabled={tool !== 'pencil' && tool !== 'spray'} />\n            Farbe\n          </label>\n          <label hidden={tool !== 'pencil' && tool !== 'spray'}>\n            <input type=\"range\" value={strokeWidth} onChange={e => setStrokeWidth(e.target.value)}\n                   min=\"1\" max=\"100\" step=\"1\" />\n            Größe\n          </label>\n          <label hidden={tool !== 'eraser'}>\n            <input type=\"range\" value={eraserWidth} onChange={e => setEraserWidth(e.target.value)}\n                   min=\"1\" max=\"150\" step=\"1\" />\n            Größe\n          </label>\n        </form>\n      </div>\n      <canvas\n        ref={canvasRef}\n        onMouseDown={handleCanvasMouseDown}\n        onMouseMove={handleCanvasMouseMove}\n        onMouseUp={handleCanvasMouseUp}\n        onMouseOut={handleCanvasMouseOut}\n      />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}